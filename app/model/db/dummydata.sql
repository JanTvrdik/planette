-- Adminer 4.1.0 MySQL dump

SET NAMES utf8;
SET time_zone = '+00:00';
SET foreign_key_checks = 0;
SET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';

INSERT INTO `article` (`id`, `translation_id`, `created_date`, `updated_date`, `user_id`, `title`, `slug`, `content`, `language`, `views`, `document_state`) VALUES
(1,	4,	'2014-10-28 10:19:14',	'2014-10-28 10:19:14',	3,	'Dibi fluent insert',	'dibi-fluent-insert',	'**don\'t forget** for execute\n\n/--\n\n$dibi->insert(\'table\', $values)\n    ->execute(\\Dibi::IDENTIFIER);\n\n\\--',	'en',	0,	'public'),
(2,	0,	'2014-10-28 18:21:20',	'2014-10-28 18:21:20',	3,	'How to test exception call',	'how-to-test-exception-call',	'/--php\nAssert::exception(function () {\n	$this->userManager->addUser(\'user\',\'P455w0rd\');\n}, \'DuplicateEntryException\');\n\n--/',	'en',	0,	'public'),
(3,	0,	'2014-10-28 10:29:42',	'2014-10-28 10:29:42',	3,	'How to create custom validation rulles',	'how-to-create-custom-validation-rulles',	'Constants (DOMAIN, USER_IN_DOMAIN) contain name of static function, that call for validation.\n\nExample \"user in domain\", show us, how work with parameters. \n\n\n/--php\n\nclass DomainsRules\n{\n	const DOMAIN = \'DomainsRules::validateDomain\';\n	const USER_IN_DOMAIN = \'DomainsRules::validateUserInDomain\';\n\n	public static function validateDomain(\\Nette\\Forms\\IControl $control)\n	{\n		// dump($control->getValue());\n		// return TRUE or FALSE\n	}\n\n	public static function validateUserInDomain(\\Nette\\Forms\\IControl $control, $domain)\n	{\n		// dump($control->getValue());\n		// return TRUE or FALSE\n	}\n}\n\\--\n\n\n/--php\n\n$form->addText(\'domain\', \'Domain:\')\n			->addRule(DomainsRules::DOMAIN, \'fill domain in format domain.tld\');\n\n\n$form->addText(\'user\', \'User:\')\n			->addRule(DomainsRules::USER_IN_DOMAIN, \'user is not in domain nette.org\', \'nette.org\');\n\n\\--\n\n\n--czech \nKonstanta obsahuje název statické funkce co se má volat pro validaci.\n\nuser in domain ukazuje jak predavat a prijmat dalsi parametry',	'en',	0,	'public'),
(4,	0,	'2014-10-28 10:35:36',	'2014-10-28 10:35:36',	3,	'Form image and rules',	'form-image-and-rules',	'/--php\n\n$image = $form->addUpload(\'image\', \'Image:\');\n\n$image->addCondition(Form::FILLED)\n	->addRule(Form::IMAGE, \'Please select image file\');\n	->addRule(Form::MIME_TYPE, \'Please select jpeg image file\', \'image/jpeg\')\n	->addRule(Form::MAX_FILE_SIZE, \'Max allowed file size is 2 MB.\', \'20000\');\n\n\n// requre on condition option\nif (!$this->article) {\n	// we need image for main article\n	$image->addConditionOn($form[\'mainArticle\'], Form::EQUAL, TRUE) \n		->setRequired(\'Please select image.\');\n}\n\n\n\\--',	'en',	0,	'public'),
(5,	0,	'2014-11-19 00:46:00',	'2014-11-19 00:46:00',	2,	'How to AJAX response (with JSON)',	'how-to-ajax-response-with-json',	'/--php\n\n$this->sendJson($dataObject);\n\n\\--\n\nor\n\n/--php\n\n$this->sendResponse(new JsonResponse($myObject));\n\n\\--\n\nor use native nette channel\n\n/--php\n$this->payload->data = $data;\n$this->sendPayload();\n\\--\n\n\nor just redrow component\n\n/--php\nif ($this->isAjax()){\n     $this->redrawControl(\'datalist\');\n}\n\\--',	'en',	0,	'public'),
(6,	1,	'2015-02-01 16:59:53',	'2015-02-01 16:59:53',	2,	'How to use Texy in Latte template as a filter',	'how-to-use-texy-in-latte-template-as-a-filter',	'Install Texy via composer and register it as a service in *config.neon*\n\n/--neon [config.neon]\nservices\n	- Texy\n\\--\n\nRegister Texy as a latte filter in presenter\n\n/--php\n\n/**\n * @var \\Texy @inject\n */\npublic $texy;\n\nprotected function createTemplate($class = NULL) {\n	$template = parent::createTemplate($class);\n	$template->addFilter(\'texy\', callback($this->texy, \'process\'));\n\n	return $template;\n}\n\n\\--\n\nand use it in latte file\n\n/--latte\n	{$article->content|noescape|texy}\n\\--',	'en',	0,	'public'),
(7,	1,	'2014-11-19 17:52:09',	'2014-11-19 17:52:09',	2,	'Jak použít Texy v šablonách',	'jak-pouzit-texy-v-sablonach',	'Instalujte Texy pomocí composeru a zaregistrujte ji jako službu v *config.neon*\n/--code neon [config.neon]\nservices\n	- Texy\n\\--\n\nRegistrujte Texy jako latte filter v presenteru\n\n/--code php\n\n/**\n * @var \\Texy @inject\n */\npublic $texy;\n\nprotected function createTemplate($class = NULL) {\n	$template = parent::createTemplate($class);\n	$template->addFilter(\'texy\', callback($this->texy, \'process\'));\n\n	return $template;\n}\n\n\\--\n\na pak už jen používejte v latte\n\n/--code latte\n	{$article->content|noescape|texy}\n\\--',	'cs',	0,	'public'),
(8,	2,	'2014-10-28 11:22:57',	'2014-10-28 11:22:57',	2,	'How to change latte syntax for JavaScript',	'how-to-change-latte-syntax-for-javascript',	'/--latte\n<script n:syntax=\"double\">\n(function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,\'script\',\'//www.google-analytics.com/analytics.js\',\'ga\');\n\nga(\'create\', \'UA-12345678-12\', \'domain.com\');\n{{if $user->isLoggedIn()}}ga(\'set\', \'dimension1\', {{$user->identity->username}});{{/if}}\nga(\'send\', \'pageview\');\n</script>\n\\--',	'en',	0,	'public'),
(9,	0,	'2014-10-28 11:23:27',	'2014-10-28 11:23:27',	2,	'latte simple foreach with {first} {last} macro',	'latte-simple-foreach-with-first-last-macro',	'/--latte\n{foreach $form->errors as $error}\n	{first}<ul>{/first}\n	<li class=\"error\">{$error}</li>\n	{last}</ul>{/last}\n{/foreach}\n\\--',	'en',	0,	'public'),
(10,	0,	'2014-10-28 11:24:06',	'2014-10-28 11:24:06',	2,	'Recursive delete folder',	'recursive-delete-folder',	'/--php\n\n$dirContent = Nette\\Utils\\Finder::find(\'*\')->from($directory)->childFirst();\nforeach ($dirContent as $file) {\n  if ($file->isDir())\n    @rmdir($file->getPathname());\n  else\n    @unlink($file->getPathname());\n}\n\n@unlink($directory);\n\n\\--',	'en',	0,	'public'),
(12,	3,	'2014-10-28 11:27:11',	'2014-10-28 11:27:11',	2,	'Connect Dibi as a service with tracy bar',	'connect-dibi-as-a-service-with-tracy-bar',	'config.neon\n/--neon\n\nparameters:\n	database:\n		host: localhost\n		username: root\n		password: ***\n		database: database_name\n		lazy: TRUE\n        profiler : TRUE\n\nservices:\n	connection:\n		class: DibiConnection(%database%)\n\n\\--\n\nor with extension\n\n/--neon\n# This will create service named \'dibi.connection\'.\n# Requires Nette Framework 2.2\n\nextensions:\n	dibi: Dibi\\Bridges\\Nette\\DibiExtension22\n\ndibi:\n	host: localhost\n	username: root\n	password: ***\n	database: database_name\n	lazy: TRUE\n\\--',	'en',	0,	'public'),
(14,	0,	'2014-10-28 11:33:03',	'2014-10-28 11:33:03',	2,	'Posílání emailů do tracy',	'posilani-emailu-do-tracy',	'Použijeme http://addons.nette.org/jandrabek/nette-mailpanel\n\nPomocí composeru nainstalujeme rozšíření \n\n`composer require jandrabek/nette-mailpanel`\n\n\na v *config.local.neon* přepíšeme defaultní mailer  \n\n/--neon\nservices:\n	nette.mailer: JanDrabek\\MailPanel\\SessionMailer\n\nnette:\n	debugger:\n		bar: [JanDrabek\\MailPanel\\MailPanel]\n\\--',	'cs',	0,	'public'),
(15,	0,	'2014-10-28 11:36:56',	'2014-10-28 11:36:56',	2,	'Examples of  macro \"n:class\" usage',	'examples-of-macro-n-class-usage',	'use `,` as class separator\n\n/--latte\n\n<header n:class=\"position-default, homepage, $query ? position-top\">\n	<h1>Nette Code Snippets</h1>\n</header>\n\n{* is same as: *}\n\n<header class=\"position-default homepage{if $query!=\'\'} position-top{/if}\">\n	<h1>Nette Code Snippets</h1>\n</header>\n\n\\--\n',	'en',	0,	'public'),
(16,	0,	'2014-10-28 11:40:28',	'2014-10-28 11:40:28',	2,	'Jak na lazy factory',	'jak-na-lazy-factory',	'automatické vytvoření lazy factory\n\n\nregistrujte v *config.neon*\n\n/--neon\n\n- SeoFactory\n\n\\--\n\nPro naši SEO třídu si vyrobíme interfaces s **anotací**\n\n*SEO.php*\n/--php \n\ninterface SeoFactory\n{\n	/** @return SEO */\n	function get();\n}\n\nclass SEO \n{\n...\n}\n\n\\--\n\na DI kontajner se už postará o vytvoření v tu pravou chvíli.\n',	'en',	0,	'public'),
(17,	0,	'2014-10-28 11:46:33',	'2014-10-28 11:46:33',	2,	'Auto factory na třídy',	'auto-factory-na-tridy',	'Chceme továrničku co nám bude vytvářet instance článku\n\nnaše třída pro článek:\n/--php\n\nclass Article\n{\n	private $db;\n\n	function __construct(PDO $db)\n	{\n		$this->db = $db;\n	}\n\n	function save()\n	{\n		$this->db->query(\"SELECT 1\");\n	}\n}\n\\--\n\nv config.neon zaregistrujeme \n\n/--neon\nservices:\n	- ArticleFactory\n\\--\n\na vytvoříme si interface s **anotací**\n\n/--php\n\ninterface ArticleFactory\n{\n	/**\n	 * @return Article\n	 */\n	function create();\n}\n\n\\--\n\n\na DI container za nás automaticky vygeneruje něco jako: \n\n/--php\nclass ArticleFactory\n{\n	private $db;\n\n\n	function __construct(PDO $db)\n	{\n		$this->db = $db;\n	}\n\n\n	public function create()\n	{\n		return new Article($this->db);\n	}\n\n}\n\\--\n\ntakže my už můžeme používat po injectnutí do presenteru articleFactory a její metodu create\n\n\n/--php\n\n$article = $this->articleFactory->create();\n$article->save();\n\n\\--\n\n',	'cs',	0,	'public'),
(18,	0,	'2014-11-02 11:31:24',	'2014-11-02 11:31:24',	2,	'Dvě instance jedné třídy s definicí primární',	'dve-instance-jedne-tridy-s-definici-primarni',	'Pokud chceme například dvě připojení k databázi, s tím že jedna je autowirovana (=bude předávána objektům kteří si o ní řeknou) u druhé je autowire zakázaný (vznikla by jinak chyba, že DI container neví kterou z nich má objektů předávat)\n\n/--neon\n\npdo: PDO(\'mysql:host=127.0.0.1;dbname=test\', \'test\',\'p4s5w0Rd\')\n	- App\\Model\\UserManager\n\ntestdb:\n	factory: PDO(\'mysql:host=127.0.0.1;dbname=testdb\', \'testdb\', \'p4s5w0Rd\')\n	setup:\n		- setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION)\n	autowired: no\n\\--',	'cs',	0,	'public'),
(19,	0,	'2014-10-28 11:53:00',	'2014-10-28 11:53:00',	2,	'Vlastní továrnička na třídu jako statická funkce',	'vlastni-tovarnicka-na-tridu-jako-staticka-funkce',	'config.neon\n/--neon\nservices:\n	- PdoFactory::create(\'mysql:host=localhost;dbname=test\')\n\\--\n\n\ndefinice továrničky\n\n/--php\nclass PdoFactory\n{\n	/**\n	 * @param $dsn\n	 * @return PDO\n	 */\n	static function create($dsn)\n	{\n		$name = \'xxx\';\n		$password = \'asd\';\n\n		return new PDO($dsn, $name, $password);\n	}\n}\n\\--',	'cs',	0,	'public'),
(20,	5,	'2014-10-28 11:55:25',	'2014-10-28 11:55:25',	2,	'Formulář a podmíněné tlačítko',	'formular-a-podminene-tlacitko',	'v definici formuláře\n/--php\n\nif (!empty($this->article)){\n	$form->addSubmit(\'send\', \'Edit article\');\n	$form->addSubmit(\'sendAndView\', \'Edit article and view\');\n} else {\n	$form->addSubmit(\'send\', \'Add article\');\n}\n\\--\n\nve zpracovani formu\n\n/--php\nif ($form[\'send\']->isSubmittedBy())\n{\n	// ...\n}\nif (isset($form[\'sendAndView\']) && $form[\'sendAndView\']->isSubmittedBy())\n{\n	// ...\n}\n\n\\--\n\n\nve vlastním vykreslování formuláře\n\n/--latte\n{ifset $form[sendAndView]}\n	{input sendAndView class => \"btn btn-secondary\"}\n{/ifset}\n\\--',	'cs',	0,	'public'),
(21,	0,	'2014-10-28 12:11:40',	'2014-10-28 12:11:40',	2,	'Různé zápisy v neonu',	'ruzne-zapisy-v-neonu',	'Předání pojmenované služby\n/--neon\nservices:\n	testdb: PDO(\'mysql:host=localhost;dbname=test\', \'test\',\'\') # named services\n	- Article(@testdb) # testdb is defined as service with name    \n\\--\n\n\nRozepsané volání vytvoření služby s nastavením public proměnné $db\n/--neon\nservices:\n	-\n		factory: App\\Presenter\\HomepagePresenter\n		setup:\n			- $db( stdClass() )\n\n	-\n		factory: App\\Presenter\\HomepagePresenter\n		setup:\n			- $db(@testdb) # used named service\n\n\\--\n\n\n\nRozepsaný zápis zkráceného `- ArticleFactory`\n/--neon\nservices:\n	-\n		implement: ArticleFactory\n		# factory: Article # is defined in @return anotation\n		# parameters: [a, b] \n\n\\--\n\n\nPřeskočení definování parametrů, které si DI kompilátor může získat sám pomocí autowire mechanismu \n/--neon\nservices:\n	- ArticleManager(..., ..., 123) # first ans second DI will autofill, third param we define\n\n\\--\n\n\nV konfiguraci můžeme volat i php funkce\n/--neon\nservices:\n	- AssetsCache( ::time() ) # return value from time() function\n\\--\n\n\nVypnutí autowired modu\n/--neon\n	pdo: PDO(\'mysql:host=localhost;dbname=test\', \'test\',\'\')\n	- App\\Model\\UserManager\n	- PdoFactory::create(\'mysql:host=localhost;dbname=test\')\n	testdb:\n		factory: PDO(\'mysql:host=127.0.0.1\', \'root\', \'xxx\')\n		setup:\n			- setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION)\n		autowired: no # <----  THIS\n\\--',	'cs',	0,	'public'),
(22,	0,	'2014-11-02 11:34:40',	'2014-11-02 11:34:40',	2,	'How to setup SimpleAuthenticator',	'how-to-setup-simpleauthenticator',	'with DI extension in *config.neon*\n\n/--neon\n\nnette:\n	security:\n		users:\n			john: p4ss\n			admin: P4S5w0rD@!\n\n\\--\n\n\nis the same as long version without using DI extension in *config.neon*\n/--neon\nservices:\n	- Nette\\Security\\SimpleAuthenticator({john:p4ss, admin: \'P4S5w0rD@!\'})\n\\--\n\n\n    ',	'en',	0,	'public'),
(23,	0,	'2014-10-28 12:21:55',	'2014-10-28 12:21:55',	2,	'Overwrite whole section in neon config',	'overwrite-whole-section-in-neon-config',	'If you use in *config.local.neon* exclamation mark after section name, mechanism overwrite all what was defined in *config*\n\n/--neon\n# config.local.neon\nnette:\n	session!:   # <-- there is exclamation mark\n    	autoStart: yes\n\n\\--\n\n\n\n/--neon\n# config.neon\nnette:\n	session:\n		expiration: 14 days\n\n\\--\n\nin result **is not** expiration parametr from main *config.neon* file',	'en',	0,	'public'),
(24,	0,	'2014-10-28 12:23:25',	'2014-10-28 12:23:25',	2,	'Simple way hot to setup basic router from config file',	'simple-way-hot-to-setup-basic-router-from-config-file',	'*config.neon*\n\n/--neon\nrouting:\n	routes:\n		<presenter>/<action>: Homepage:default\n        \n\\--',	'en',	0,	'public'),
(26,	0,	'2014-10-28 12:24:38',	'2014-10-28 12:24:38',	2,	'Možnosti zápisu rout pro Router',	'moznosti-zapisu-rout-pro-router',	'id je cislo\n/--php\n\n\n$router[] = new Route(\'<presenter>/<action>[/<id \\d+>]\', \'Homepage:default\');\n\n\\--\n\n\ncokoli i /\n/--php\n\n\n$router[] = new Route(\'<slug> .+\', \'Homepage:default\');\n\n\\--\n\n\ni to co je za ?\n/--php\n\n\n$router[] = new Route(\'login ? cmd=<action>\', \'Sign:in\');\n\n\\--\n\n\n/--php\n\n\n$router[] = new Route(\'<presenter>/<action>\', [\n	\'presenter\' => [\n    	Route::VALUE => \'Homepage\',\n    \n    ],\n    \'action\' => [\n    	Route::VALUE => \'default\',\n        Route::PATTERN => \'[a-z]+\',\n        Route::FILTER => [\n        	\'ahoj\' => \'xxx\'\n        ],\n        Route::FILTER_STRICT => TRUE,\n    ]\n]);\n\n\\--\n\n\n/--php\n$router[] = new Route(\'<presenter>/<action>\', [\n	\'presenter\' => [\n    	Route::VALUE => \'Homepage\',\n    \n    ],\n    \'action\' => [\n    	Route::VALUE => \'default\',\n        Route::FILTER_IN => function($val){\n        	return $val . \'123\'; // + RawUrlDecode\n        },\n        Route::FILTER_OUT => function($val){\n        	return substr( $val, 0, -3) \n        },\n        Route::FILTER_STRICT => TRUE,\n    ]\n]);\n\\--\n\n\n\n/--php\n$router[] = new Route(\'<presenter>/<action>\', [\n	NULL => [\n    	Route::FILTER_IN => function($params){\n        	dump($params) // zde de jde ziskat podle slug ze 3 tabulek\n            return $params;\n        },\n        Route::FILTER_OUT => function($params){\n        	dump($params)\n            return $params;\n        },\n    ],\n	\'presenter\' => [\n    	Route::VALUE => \'Homepage\',\n    \n    ],\n    \'action\' => [\n    	Route::VALUE => \'default\',\n        Route::FILTER_IN => function($val){\n        	return $val . \'123\'; // + RawUrlDecode\n        },\n        Route::FILTER_OUT => function($val){\n        	return substr( $val, 0, -3) \n        },\n        Route::FILTER_STRICT => TRUE,\n    ]\n]);\n\\--\n\n/--php\n$router[] = new Route(\'<? [0-9]{4}>/<presenter>/<action>\'); // cislo na zacatku se zahazuje\n\\--\n\n\n\n/--php\n$router[] = new Route(\'<id [\\d+]>[-<slug>]\', \'Homepage:default\');\n\\--\n',	'cs',	0,	'public'),
(27,	0,	'2014-10-28 12:26:24',	'2014-10-28 12:26:24',	2,	'Use persistent parameters in Presenters',	'use-persistent-parameters-in-presenters',	'/--php\n\nclass ProductPresenter extends Presenter\n{\n    /** @persistent */\n    public $lang;\n\n    ...\n    \n\\--',	'en',	0,	'public'),
(28,	0,	'2014-10-28 12:33:35',	'2014-10-28 12:33:35',	2,	'Jak na LIKE dotaz s Nette\\Database',	'jak-na-like-dotaz-s-nette-database',	'Jednoduchý zpusob je:\n\n/--php\n$db->table(\'table_name\')->where(\"neco LIKE ?\", \"%{$search}%\");\n\\--\n\n\nSpravně, ale:\n\n/--php\n$db->table(\'table_name\')->where(\'name LIKE ?\',new \\Nette\\Database\\SqlLiteral($db->getSupplementalDriver()->formatLike($search, 0)));\n\\--\n\nzroj: http://rjwebdesign.cz/blog/nette/20140826-jak-spravne-pouzit-like-v-nette-database',	'cs',	0,	'public'),
(29,	0,	'2014-10-28 13:04:22',	'2014-10-28 13:04:22',	2,	'Komplikovanější Router factory',	'komplikovanejsi-router-factory',	'/--php\n<?php\n\nnamespace App;\n\nuse Nette,\n	Nette\\Application\\Routers\\RouteList,\n	Nette\\Application\\Routers\\Route,\n	Nette\\Application\\Routers\\SimpleRouter;\n\n\n/**\n * Router factory.\n */\nclass RouterFactory\n{\n\n	/**\n	 * @return \\Nette\\Application\\IRouter\n	 */\n	public function createRouter()\n	{\n		$router = new RouteList();\n		$router[] = new Route(\'autocomplete[/<do>]\', function($id){\n\n		});\n		$router[] = new Route(\'login ? cmd=<action>\', \'Sign:in\');\n		$router[] = new Route(\'<? [0-9]{4}>/<presenter>/<action>\', [\n			NULL => [\n				Route::FILTER_IN => function($params) {\n					dump($params);\n					return $params;\n				},\n				Route::FILTER_OUT => function($params) {\n					dump($params);\n					return $params;\n				},\n			],\n			\'presenter\' => [\n				Route::VALUE => \'Homepage\',\n			],\n			\'action\' => [\n				Route::VALUE => \'default\',\n				Route::FILTER_IN => function($val){\n					return $val . \'123\';\n				},\n				Route::FILTER_OUT => function($val){\n					return substr($val, 0, -3);\n				},\n				Route::FILTER_STRICT => TRUE,\n\n			],\n		]);\n\n		//$router[] = new Route(\'<slug .+>\', \'Homepage:default\');\n		//$router[] = new Route(\'<presenter>/<action>[/<id \\d+>]\', \'Homepage:default\');\n		return $router;\n	}\n\n}\n\n\\--',	'cs',	0,	'public'),
(34,	0,	'2014-10-27 18:03:16',	'2014-10-27 18:03:16',	2,	'Jak na znovupouzitelne formulare',	'jak-na-znovupouzitelne-formulare',	'Nebudeme definovat formular v presenteru, ale pomoci DI si nechame injectnout pomocnou tovarni tridu ktere v metode *createLoginForm* ho vytvori a vrati nam ho  \n\n/--php [HomepagePresenter.php]\n\nclass HomepagePresenter extends BasePresenter\n{\n	/** @var \\FormFactory @inject */\n	public $formFactory;\n\n	function createComponentLoginForm()\n	{\n		$form = $this->formFactory->createLoginForm();\n		$form->onSuccess[] = function(){\n			$this->redirect(\'...\'); // zde uz staci jen nastavit kam presmerovat\n		};\n		return $form;\n	}\n    \n\\--\n\n**nezapomente** na vytvoreni service v sekce services v *config.neon*\n\n/--neon [config.neon]\n...\nservices\n	- FormFactory\n...\n\\--\n\na pak priblizne jak by mohla vypadat trida *FormFactory*\n\n\n/--php [FormFactory.php]\n\n<?php\n\nclass FormFactory\n{\n\n	function createLoginForm()\n	{\n		$form = new Nette\\Application\\UI\\Form;\n		$form->addSubmit(\'send\');\n		$form->onSuccess[] = function($form, $vals){\n			//$vals;\n            // zde zpracujete formular (bez finalniho redirectu jak jste zvykli) \n			// $form->addError(); // timhle se pripadne stopne dalsi volani onSuccess\n		};\n		return $form;\n	}\n\n}\n\n\\--',	'cs',	0,	'public'),
(35,	0,	'2014-10-28 13:03:07',	'2014-10-28 13:03:07',	2,	'Jak v Database pracovat s datumem případně s NOW()',	'jak-v-database-pracovat-s-datumem-pripadne-s-now',	'Pro where nebo insert/update lze použít\n\n/--php\n\n...->where(\"x = ?\", new \\DateTime()); \n\n\\--\n\n\ns použitím funkce `NOW()` je to komplikovanější\n\n/--php\n$db->table(\'table_name\')->get(1)->update(array(\'updated_at\'=>new \\Nette\\Database\\SqlLiteral(\'NOW()\')));\n\\--\n\nzroj: http://rjwebdesign.cz/blog/nette/20140826-jak-spravne-pouzit-like-v-nette-database\n',	'cs',	0,	'public'),
(36,	2,	'2014-10-31 18:37:29',	'2014-10-31 18:37:29',	2,	'Jak změnit latte syntaxi pro použití s JavaScriptem',	'jak-zmenit-latte-syntaxi-pro-pouziti-s-javascriptem',	'/--latte\n<script n:syntax=\"double\">\n(function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,\'script\',\'//www.google-analytics.com/analytics.js\',\'ga\');\n\nga(\'create\', \'UA-12345678-12\', \'domain.com\');\n{{if $user->isLoggedIn()}}ga(\'set\', \'dimension1\', {{$user->identity->username}});{{/if}}\nga(\'send\', \'pageview\');\n</script>\n\\--',	'cs',	0,	'public'),
(38,	3,	'2014-10-31 18:51:28',	'2014-10-31 18:51:28',	2,	'Nastavení Dibi jako service s podporou tracy',	'nastaveni-dibi-jako-service-s-podporou-tracy',	'config.neon\n/--neon\n\nparameters:\n	database:\n		host: localhost\n		username: root\n		password: ***\n		database: database_name\n		lazy: TRUE\n        profiler : TRUE\n\nservices:\n	connection:\n		class: DibiConnection(%database%)\n\n\\--\n\nnebo pomocí extension\n\n/--neon\n# This will create service named \'dibi.connection\'.\n# Requires Nette Framework 2.2\n\nextensions:\n	dibi: Dibi\\Bridges\\Nette\\DibiExtension22\n\ndibi:\n	host: localhost\n	username: root\n	password: ***\n	database: database_name\n	lazy: TRUE\n\\--',	'cs',	0,	'public'),
(39,	4,	'2015-01-18 18:22:53',	'2015-01-18 18:22:53',	2,	'Dibi fluent insert',	'dibi-fluent-insert',	'**nezapomeňte** na execute\n\n/--php\n\n$dibi->insert(\'table\', $values)\n    ->execute(\\Dibi::IDENTIFIER);\n\n\\--',	'cs',	0,	'public'),
(40,	6,	'2014-12-04 00:24:57',	'2014-12-04 00:24:57',	2,	'Example with image',	'example-with-image',	'cesnek :) \n\n[* knowledgebase/qzfqfjarev.547f9a3a18673.jpg, 200x200, fill *]\n\nindian\n\n[* knowledgebase/74xp1ynlsl.547f9ae5cd461.jpg, 200x200, exact *]\n\nsnehububu\n\n[* knowledgebase/9gncuugy41.547f9b5889fb4.jpg, 200x200, exact *]',	'en',	0,	'public'),
(41,	5,	'2014-11-05 20:31:41',	'2014-11-05 20:31:41',	2,	'Formulář a podmíněné tlačítko (en)',	'formular-a-podminene-tlacitko-en',	'v definici formuláře\n\n/--php\n\nif (!empty($this->article)){\n	$form->addSubmit(\'send\', \'Edit article\');\n	$form->addSubmit(\'sendAndView\', \'Edit article and view\');\n} else {\n	$form->addSubmit(\'send\', \'Add article\');\n}\n\\--\n\nve zpracovani formu\n\n/--php\nif ($form[\'send\']->isSubmittedBy())\n{\n	// ...\n}\nif (isset($form[\'sendAndView\']) && $form[\'sendAndView\']->isSubmittedBy())\n{\n	// ...\n}\n\n\\--\n\n\nve vlastním vykreslování formuláře\n\n/--latte\n{ifset $form[sendAndView]}\n	{input sendAndView class => \"btn btn-secondary\"}\n{/ifset}\n\\--',	'en',	0,	'public'),
(42,	0,	'2014-11-08 23:09:50',	'2014-11-08 23:09:50',	2,	'Error presenter z modulu',	'error-presenter-z-modulu',	'Lze použít dvoujtečkový zápis pro definici modulu\n\n/--neon\nnette:\n	application:\n		errorPresenter: \"Front:Error\"\n        \n\\--',	'cs',	0,	'public'),
(43,	0,	'2014-11-10 10:38:30',	'2014-11-10 10:38:30',	2,	'Jednoduché stránkování záznamy (TODO)',	'jednoduche-strankovani-zaznamy-todo',	'Potřebujeme nějakou třídu ArticleModel co nám bude vracet kolekci (nefetchnutá data) a jejich celkový počet.\n\n/--php\n\npublic function renderList($page = 1)\n{\n	$this->page = $page;\n\n	$paginator = new Paginator();\n	$paginator->setItemsPerPage(10);\n	$paginator->setPage($this->page);\n	$count = $this->articleModel->getCount();\n	$paginator->setItemCount($count);\n\n	if ($count > $paginator->itemsPerPage && !$paginator->last) {\n		$this->template->page = $page;\n		$this->template->showMoreButton = TRUE;\n	} else {\n		$this->template->showMoreButton = FALSE;\n	}\n\n	$this->template->articleList = $this->articleManager->find()\n		->limit($paginator->itemsPerPage, $paginator->offset)\n		->fetchAll();\n\n	// pro ajaxove dokreslovani\n	if ($this->isAjax()){\n		$this->redrawControl(\'articleList\');\n		$this->redrawControl(\'articleListButton\');\n	}\n}\n\n\\--',	'cs',	0,	'public'),
(44,	0,	'2014-11-10 16:41:32',	'2014-11-10 16:41:32',	2,	'Ajax snippet s append místo replace (TODO)',	'ajax-snippet-s-append-misto-replace-todo',	'/--latte\n\n{* FUNGUJE *}\n<div n:snippet=\"timelineList\" data-ajax-append data-ajax-append-animate=\"fade\">\n	xxx\n</div>\n\n{* nefunguje*}\n{snippet timelineList div , data-ajax-append, data-ajax-append-animate=\"fade\"}\n	xxx\n{/snippet}\n\n\n\\--',	'cs',	0,	'public');

INSERT INTO `article_like` (`user_id`, `article_id`, `created_date`) VALUES
(1,	10,	'2014-10-18 17:32:48'),
(2,	1,	'2015-01-31 22:03:54'),
(2,	2,	'2015-01-18 14:41:05'),
(2,	10,	'2014-10-18 17:32:57'),
(3,	10,	'2014-10-18 17:33:05');

INSERT INTO `article_tag` (`article_id`, `tag_id`) VALUES
(34,	19),
(34,	9),
(34,	27),
(1,	2),
(1,	27),
(3,	19),
(3,	35),
(3,	27),
(4,	36),
(4,	19),
(4,	35),
(4,	27),
(8,	1),
(8,	11),
(8,	27),
(9,	1),
(9,	27),
(10,	3),
(10,	27),
(12,	5),
(12,	9),
(12,	2),
(12,	14),
(12,	27),
(14,	5),
(14,	13),
(14,	14),
(14,	15),
(14,	27),
(15,	1),
(15,	17),
(15,	27),
(16,	9),
(16,	18),
(16,	27),
(17,	9),
(17,	18),
(17,	27),
(19,	5),
(19,	9),
(19,	27),
(20,	19),
(20,	1),
(20,	27),
(21,	5),
(21,	9),
(21,	27),
(23,	5),
(23,	27),
(24,	21),
(24,	6),
(24,	5),
(24,	27),
(26,	21),
(26,	27),
(27,	22),
(27,	37),
(27,	27),
(28,	4),
(28,	23),
(28,	27),
(35,	4),
(35,	27),
(29,	21),
(29,	24),
(29,	27),
(2,	33),
(2,	34),
(2,	27),
(36,	1),
(36,	11),
(36,	27),
(38,	5),
(38,	9),
(38,	2),
(38,	14),
(38,	27),
(18,	5),
(18,	9),
(18,	27),
(22,	5),
(22,	9),
(22,	20),
(22,	27),
(41,	19),
(41,	1),
(41,	27),
(42,	38),
(42,	5),
(42,	6),
(42,	27),
(43,	39),
(43,	27),
(44,	40),
(44,	1),
(44,	12),
(44,	27),
(5,	7),
(5,	8),
(5,	27),
(7,	16),
(7,	9),
(7,	1),
(7,	27),
(40,	7),
(40,	27),
(39,	2),
(39,	27),
(6,	16),
(6,	9),
(6,	1),
(6,	27);

INSERT INTO `tag` (`id`, `name`, `type`) VALUES
(1,	'latte',	'category'),
(2,	'dibi',	'category'),
(3,	'finder',	'normal'),
(4,	'database',	'normal'),
(5,	'neon',	'normal'),
(6,	'configuration',	'normal'),
(7,	'json',	'normal'),
(8,	'response',	'normal'),
(9,	'dependency injection',	'normal'),
(11,	'javascript',	'normal'),
(12,	'ajax',	'normal'),
(13,	'email',	'normal'),
(14,	'tracy',	'normal'),
(15,	'debug',	'normal'),
(16,	'texy',	'normal'),
(17,	'n:macro',	'normal'),
(18,	'interface',	'normal'),
(19,	'form',	'normal'),
(20,	'SimpleAuthenticator',	'normal'),
(21,	'routes',	'normal'),
(22,	'Presenter',	'normal'),
(23,	'query',	'normal'),
(24,	'factory',	'normal'),
(25,	'php',	'normal'),
(27,	'snippet',	'type'),
(28,	'tutorial',	'type'),
(29,	'video',	'type'),
(31,	'posobota',	'category'),
(33,	'tester',	'category'),
(34,	'exception',	'normal'),
(35,	'validation',	'normal'),
(36,	'image',	'normal'),
(37,	'persistent',	'normal'),
(38,	'errorPresenter',	'normal'),
(39,	'Paginator',	'normal'),
(40,	'snippet',	'normal'),
(42,	'facebook',	'normal'),
(44,	'doctrine',	'normal'),
(45,	'article',	'type'),
(46,	'link',	'type');

INSERT INTO `users` (`id`, `username`, `password`, `email`, `role`, `active`, `name`, `avatar`, `change_email`, `change_email_requested`, `change_email_tokenOne`, `change_email_tokenTwo`) VALUES
(2,	'chemix',	'$2y$10$K.JEAIhI/bmk2Kas2uxFi.3Y.qJ6LZNw44X5k9Lq81R27wgcZqsSu',	'hello@honzacerny.com',	'user',	'1',	'chemiX',	'/data/user/ypdquvbzxj_download-3-.png',	'',	'0000-00-00 00:00:00',	'',	''),
(3,	'medhi',	'$2y$10$K.JEAIhI/bmk2Kas2uxFi.3Y.qJ6LZNw44X5k9Lq81R27wgcZqsSu',	'medhi@blueboard.cz',	'user',	'1',	'medhi',	'/data/user/Screen-Shot-2014-10-06-at-14.26.35.png',	'',	'0000-00-00 00:00:00',	'',	'');

-- 2015-02-27 13:26:14
